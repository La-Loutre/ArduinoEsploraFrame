#include "frame.h"
#define DEF_R 255
#define DEF_G 255
#define DEG_B 255
Frame::Frame()
{
  currentScreen=-1;
  for(int i=0;i<NB_MAX_POINTS;i++)
    {
      existPoint[i]=false;
    }
  for(int i=0;i<NB_MAX_VIRTUAL_SCREEN;i++)
    {
      existVirtualScreen[i]=false;
    }
}
void Frame::addVirtualScreen(int largeur,int hauteur,int x,int y)
{
  for(int i=0;i<NB_MAX_POINTS;i++)
    {
      if(!existVirtualScreen[i])
	{
	  existVirtualScreen[i]=true;
	  virtualsScreen[i].posX=x;
	  virtualsScreen[i].posY=y;
	  virtualsScreen[i].height=hauteur;
	  virtualsScreen[i].width=largeur;
	}
    }
}
void Frame::setVirtualScreen(int numero)
{
  //Pas de vÃ©rification pour le moment.
  currentScreen=numero;
}
int getNbOfVirtualScreen()
{
  int compteur=0;
  for(int i=0;i<NB_MAX_VIRTUAL_SCREEN;i++)
    {
      if(existVirtualScreen[i])
	compteur++;
    }
  return compteur;
}

int Frame::getNbOfCurrentVirtualScreen()
{
  return currentScreen;
}
void Frame::drawPoint(int x,int y)
{
  for(int i=0;i<NB_MAX_POINTS;i++)
    {
      if(!existPoint[i])
	{
	  points[i]={x,y,DEF_R,DEF_G,DEF_B};
	  existPoint[i]=true;
	}
    }
  
}
void Frame::moveScreen(int numeroScreen,int x,int y)
{
  virtualsScreen[numeroScreen].posX=x;
  virtualsScreen[numeroScreen].posY=y;
  if(numeroScreen==currentScreen)
    drawCurrentScreen();
}
static boolean Frame::pointsIsInVirtualScreen(Points p,VirtualScreen v)
{
  if(p.x>v.posX && p.x < v.posX+v.width && p.y > v.posY && p.y < v.posY+heigth)
    {
      return true;
    }
  return false;
}
void Frame::drawCurrentScreen()
{
  VirtualScreen v=virtualsScreen[currentScreen];
  for(int i=0;i<NB_MAX_POINTS;i++)
    {
      if(existPoint[i])
	{
	  if(pointsIsInVirtualScreen(points[i],v)){
	    EsploraTFT.point(points[i].x-v.posX,points[i].y-v.posY);
	  }
	}
    }
  
}
